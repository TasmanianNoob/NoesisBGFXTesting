//PARTIALLY TAKEN FROM https://github.com/MarioSieg/BGFX_Noesis_Renderer/tree/main
//All possible variables are here because there is only one file.
//Possible solutions:
//a) run python script that adds the correct variables to shader before compile
//b) compile different files for each shader in build_shaders.bat (https://github.com/Dakror/noesis-bgfx/tree/master/shaders or https://github.com/MarioSieg/BGFX_Noesis_Renderer/tree/main/Shaders)
$input a_position, a_color0, a_texcoord0, a_texcoord1, a_texcoord5, a_texcoord2, a_texcoord3, a_texcoord4
$output v_color0, v_uv0, v_uv1, v_uv2, v_uv3, v_st1, v_coverage, v_rect, v_tile, v_imagePos

#include <bgfx_shader.sh>

uniform vec4 u_cbuffer1_vs;

float SRGBToLinear(float v)
{
	if (v <= 0.04045)
	{
		return v * (1.0 / 12.92);
	}
	else
	{
		return pow( v * (1.0 / 1.055) + 0.0521327, 2.4);
	}
}

void main()
{
	gl_Position = mul(vec4(a_position, 0.0, 1.0), u_proj);

#ifdef HAS_COLOR
	#ifdef SRGB
	v_color0.r = SRGBToLinear(a_color0.r);
	v_color0.g = SRGBToLinear(a_color0.g);
	v_color0.b = SRGBToLinear(a_color0.b);
	v_color0.a = a_color0.a;
	#else
	v_color0 = a_color0;
	#endif
#endif

#ifdef DOWNSAMPLE
	v_uv0 = a_texcoord0 + vec2(a_texcoord1.x, a_texcoord1.y);
	v_uv1 = a_texcoord0 + vec2(a_texcoord1.x, -a_texcoord1.y);
	v_uv2 = a_texcoord0 + vec2(-a_texcoord1.x, a_texcoord1.y);
	v_uv3 = a_texcoord0 + vec2(-a_texcoord1.x, -a_texcoord1.y);
#else
	#ifdef HAS_UV0
	v_uv0 = a_texcoord0;
	#endif

	#ifdef HAS_UV1
	v_uv1 = a_texcoord1;
	#endif
#endif

#ifdef SDF
	v_st1 = vec2(a_texcoord1 * u_cbuffer1_vs.xy);
#endif

#ifdef HAS_COVERAGE
	v_coverage = a_texcoord5;
#endif

#ifdef HAS_RECT
	v_rect = a_texcoord2;
#endif

#ifdef HAS_TILE
	v_tile = a_texcoord3;
#endif

#ifdef HAS_IMAGEPOS
	v_imagePos = a_texcoord4;
#endif
}